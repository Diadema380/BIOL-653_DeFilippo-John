<<<<<<< HEAD
geom_line()
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
# n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
# n <- rep(NA, ngen)
# n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
# n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
pop_df1 <- data.frame(N = pop1, time = 1:4)
pop2 <- dgrowth(r = 2, ninit = 1, k = 1000, ngen = 4)
pop_df2 <- data.frame(N = pop2, time = 1:4)
pops_df <- rbind(pop_df1, pop_df2)
pops_df
r_vals = seq(0.7, 3, 0.1)
for (1 in 1:length(ngen)) {
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
}
for (i in 1:length(ngen)) {
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
}
for (i in 1:length(ngen = 100)) {
dgrowth(r = r_vals, ninit = 1, k = 1000)
}
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
warnings()
dgrowth <- function(ninit, r_vals, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r_vals*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
r_vals = seq(0.7, 3, 0.1)
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
r_vals
ngen <- 100
r_vals = seq(0.7, (ngen/0.1), 0.1)
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
warnings()
r_vals = seq(0.7, 3, 0.1)
for (i in 1:length(r_vals)) {
dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
}
for (i in 1:length(r_vals)) {
newgrowth <- dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
return(newgrowth)
}
length(r_vals)
r_vals = seq(0.7, 3, 0.1)
for (i in 1:length(r_vals)) {
data.frame(newgrowth) <- dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
}
newgrowth <- data.frame
for (i in 1:length(r_vals)) {
newgrowth <- dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
}
newgrowth
newgrowth[[1]]
newgrowth[[2]]
for (i in 1:length(r_vals)) {
newgrowth <- dgrowth(r_vals[i], ninit = 1, k = 1000, ngen = 100)
}
newgrowth[[2]]
newgrowth
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r_vals[i], ninit = 1, k = 1000, ngen = 100)
}
warnings()
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r_vals[i], ninit = 2, k = 1000, ngen = 10)
}
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 10)
}
class(newgrowth)
newgrowth <- data.frame()
class(newgrowth)
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 10)
}
length(r_vals)
class(r_vals)
r_vals
r_vals[2]
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame()
or (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 4)
}
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
#n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 4)
}
class(newgrowth)
newgrowth[[2]]
newgrowth[2]
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
for (j in 1:length(r_vals)) {
r=r_vals[j]
newgrowth[j] <- dgrowth(r, ninit = 2, k = 1000, ngen = 4)
}
newgrowth[] <- data.frame()
for (j in 1:length(r_vals)) {
r=r_vals[j]
newgrowth[j] <- dgrowth(r, ninit = 2, k = 1000, ngen = 4)
}
newgrowth <- data.frame()
class(newgrowth)
for (j in 1:length(r_vals)) {
r=r_vals[j]
newgrowth <- dgrowth(r, ninit = 2, k = 1000, ngen = 4)
}
for (j in 1:length(r_vals)) {
newgrowth <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 1:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
# n <- rep(NA, ngen)
# n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame()
for (j in 1:length(r_vals)) {
dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r =1, ninit = ninit, k = k, ngen = ngen))
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = 1, ninit = ninit, k = k, ngen = ngen))
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
pop_df1 <- data.frame(N = pop1, time = 1:4)
pop2 <- dgrowth(r = 2, ninit = 1, k = 1000, ngen = 4)
pop_df2 <- data.frame(N = pop2, time = 1:4)
pop1
=======
p + geom_point() + scale_color_gradient(
low = "red", high = "blue", mid = "white", midpoint = 25)
p + geom_point() + scale_color_gradient(
p + geom_point() + scale_color_gradient2(
low = "red", high = "blue", mid = "white", midpoint = 8)
p + geom_point() + scale_color_gradient(colours = topo.colors(10))
p + geom_point() + scale_color_gradientn(colours = topo.colors(10))
p + geom_point() + facet_wrap(~ continent)
p + geom_jitter()
p + geom_point(alpha = 0.3)
p + geom_point _ geom_text(aes(label = year))
p + geom_point + geom_text(aes(label = year))
p + geom_point() + geom_text(aes(label = year))
q()
install.packages('dplyr')
install.packages('tidyr')
library(dplyr)
library(tidyr)
install.packages("dplyr")
install.packages('lazyeval')
sudo install.packages('dplyr')
r.version
R.version()
version
library(gapminder)
group_by(gapminder, continent) %>%
summarise(mean_life = mean(lifeExp))
group_by(gapminder, continent) |
summarise(mean_life = mean(lifeExp))
version
install.packages("dplyr")
install.packages("dplyr")
install.packages("Rcpp")
install.packages("dplyr")
library(dplyr)
install.packages('tidyr')
library(tidyr)
group_by(gapminder, continent)
summarise(mean_life = mean(lifeExp))
select(gapminder, country)
group_by(gapminder, continent)
summarise(mean_life = mean(lifeExp))
group_by(gapminder, continent) %>%
summarise(mean_life = mean(lifeExp))
str(gapminder)
yr <- select(gapminder, year)
yr
select(yr, 1952, 1972, 2002)
filter(gapminder, 1952, 1972, 2002)
filter(gapminder, year = c(1952, 1972, 2002))
filter(gapminder, year == c(1952 | 1972 | 2002))
filter(gapminder, year == c(1952, 1972, 2002))
filter(gapminder, year == 1952 | year == 1972 == year == 2002)
filter(gapminder, year == 1952 | year == 1972 | year == 2002)
filter(gapminder, year %in% c(1952, 1972, 2002))
min(gapminder %>%
filter(year == c(1952, 1972, 2002)) %>%
group_by(continent, year) %>%
View(.))
head(gapminder %>%
head(gapminder %>%
filter(year == c(1952, 1972, 2002)) %>%
group_by(continent, year) %>%
View(.))
set1 <- (gapminder %>%
filter(year == c(1952, 1972, 2002)) %>%
group_by(continent, year) %>%
View(.))
set1 <- (gapminder %>%
filter(year == c(1952, 1972, 2002)) %>%
group_by(continent, year) %>%))
set1 <- (gapminder %>%
filter(year == c(1952, 1972, 2002)) %>%
group_by(continent, year))
set1[1,]
set1[2,]
set1 <- (gapminder %>%
filter(year == c(1952, 1972, 2002)) %>%
group_by(continent, year) %>%
slice(which.min(pop))
gapminder %>%
filter(year == c(1952, 1972, 2002)) %>%
group_by(continent, year) %>%
slice(which.min(pop))
gapminder %>%
filter(year %in% c(1952, 1972, 2002)) %>%
group_by(continent, year) %>%
slice(which.min(pop))
q()
q()
library(ggplot2)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
q()
library(gapminder)
library(ggplot2)
library(dplyr)
gapminder %>% group_by(country)
gapminder %>%
group_by(country)
summarize(mean_gdpPercap = mean(gdpPercap))
gapminder %>%
group_by(country) %>%
summarize(mean_gdpPercap = mean(gdpPercap))
str(gapminder)
gapminder <- tbl_df(gapminder)
str(gapminder)
q()
library(gapminder)
library(ggplot2)
library(dplyr)
str gapminder
str(gapminder)
geom_point()
g2 <- ggplot(gapminder, aes(x = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = continent)) +
geom_hist()
ggplot(data = gapminder, aes(x = continent)) +
geom_histogram()
ggplot(data = gapminder, aes(x = continent, colour(continent))) +
geom_histogram()
ggplot(data = gapminder, aes(x = continent, colour = continent)) +
geom_histogram()
ggplot(data = gapminder, aes(x = continent, fill = continent)) +
geom_histogram()
ggplot(data = gapminder, aes(x = continent, fill = continent)) +
geom_hist()
ggplot(data = gapminder, aes(x = gdpPercap, y=lifeExp, colour = continent)) +
geom_point()
lgm <- gapminder
lgcl <- estimateLogicle(lgm, colnames(lgm)[5])
lgm[5]
head(lgm[5])
str(gapminder)
head(lgm[6])
lgdp <- log10(gapminder[6]
ggplot(data = gapminder, aes(x = lgdp, y=lifeExp, colour = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = lgdp, y=lifeExp, colour = continent)) +
geom_point()
lgdp <- log10(gapminder[6]
lgdp <- log10(gapminder[6])
ggplot(data = gapminder, aes(x = lgdp, y=lifeExp, colour = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = log10(gdpPercap), y=lifeExp, colour = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = log10(gdpPercap), y=lifeExp, colour = continent)) +
geom_point() +
geom_smooth
ggplot(data = gapminder, aes(x = log10(gdpPercap), y=lifeExp, colour = continent)) +
geom_point() +
geom_smooth()
ggplot(data = gapminder, aes(x = log10(gdpPercap), y=lifeExp, colour = continent)) +
geom_point() +
geom_smooth(method = lm)
ggplot(data = gapminder, aes(x = log10(gdpPercap), y=lifeExp, colour = continent)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
ggplot(data = gapminder, aes(x = lifeExp, colour = continent)) +
geom_density() +
facet_grid(lifeExp ~ continent)
ggplot(data = gapminder, aes(x = lifeExp, colour = continent)) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density()
str(gapminder)
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density() +
facet_wrap( ~ year, ncol = 4)
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_boxplot() +
element_text(angle = 45)
facet_wrap( ~ year, ncol = 4)
ggplot(data = gapminder, aes(x = lifeExp, y = continent)) +
geom_boxplot() +
element_text(angle = 45)
facet_wrap( ~ year, ncol = 4)
ggplot(data = gapminder, aes(x = lifeExp, y = continent)) +
geom_boxplot() +
element_text(angle = 45) +
facet_wrap( ~ year, ncol = 4)
ggplot(data = gapminder, aes(x = lifeExp, y = continent)) +
geom_boxplot()
ggplot(data = gapminder, aes(x = lifeExp, y = continent)) +
geom_boxplot() +
facet_wrap( ~ year, ncol = 4)
ggplot(data = gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
facet_wrap( ~ year, ncol = 4)
ggplot(data = gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
facet_wrap( ~ year, ncol = 4) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density()
gapminder[continent]
gapminder[$continent]
gapminder[[continent]]
gapminder[[continent, ]]
gapminder[continent, ]
gapminder[2, ]
gapminder[3, ]
gapminder[, 2]
gapminder[2, ]
gapminder[2, 2]
ga <- gapminder %>%
filter(continent == Asia)
ga <- gapminder %>%
filter(continent == $Asia)
ga <- gapminder %>%
filter[continent == $Asia]
filter(gapminder, continent == $Asia)
str(gapminder)
filter(gapminder, continent == Asia)
select(gapminder, continent == Asia)
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent == Asia)) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[3]) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[3]))) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[Asia]))) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[$Asia]))) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[$Asia]))) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[[$Asia]]))) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[3]))) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[3]))) +
geom_density() +
geom_mean
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[3]))) +
geom_density() +
geom_vline(aes(xintercept = mean(lifeExp))
ggplot(data = gapminder, aes(x = lifeExp, fill = (continent[3]))) +
geom_density() +
geom_vline(aes(xintercept = mean(lifeExp)))
summary(gapminder)
gapminder %>%
group_by(country) %>%
summarize(mean_lifeExp = mean(lifeExp))
gapminder %>%
group_by(continent) %>%
summarize(mean_lifeExp = mean(lifeExp))
data.frame(gapminder) %>%
group_by(continent) %>%
summarize(mean_lifeExp = mean(lifeExp))
summarize(mean_lifeExp)
gapminder %>% summarize(mean_lifeExp)
df <- data.frame(gapminder) %>%
group_by(continent) %>%
summarize(mean_lifeExp = mean(lifeExp))
ggplot(data = df, aes(x = lifeExp, fill = lifeExp)) +
geom_density() +
facet_wrap( ~ continent, ncol = 3)
ggplot(data = gapminder, aes(x = lifeExp, fill = lifeExp)) +
geom_density() +
facet_wrap( ~ continent, ncol = 3)
ggplot(data = gapminder, aes(x = lifeExp, fill = lifeExp)) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp)) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density()
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density() +
facet_wrap( ~ continent, ncol = 3)
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density() +
facet_wrap( ~ continent, ncol = 3) +
geom_vline(aes(xintercept = mean(lifeExp)))
ggplot(data = data.frame, aes(x = lifeExp, fill = continent)) +
geom_density() +
facet_wrap( ~ continent, ncol = 3) +
geom_vline(aes(xintercept = mean(lifeExp)))
df <- data.frame(gapminder) %>%
group_by(continent) %>%
summarize(mean_lifeExp = mean(lifeExp))
df
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density() +
facet_wrap( ~ continent, ncol = 3) +
geom_vline(aes(xintercept = mean_lifeExp))
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density() +
geom_vline(aes(xintercept = mean(lifeExp))) +
facet_wrap( ~ continent, ncol = 3)
df <- data.frame(gapminder) %>%
group_by(continent) %>%
summarize(mean_lifeExp = mean(lifeExp))
plot(df)
str(df)
ggplot(data = df, aes(x = lifeExp, fill = continent)) +
geom_density()
ggplot(data = df, aes(x = mean_lifeExp, fill = continent)) +
geom_density()
mean(df)
hw_gapminder <- read.csv('./hw_gapminder.csv')
read.csv('./hw_gapminder.csv')
library(hw_gapminder.csv)
library(hw_gapminder)
hw_gapminder <- read.csv('~/R_projects/hw_gapminder.csv')
gwd
gwd()
getwd()
ls()
read.csv('/hw_gapminder.csv')
read.csv('hw_gapminder.csv')
read.csv('/Users/John/hw_gapminder.csv')
library(ggplot2)
hw_gapminder <- read.csv('/Users/John/hw_gapminder.csv')
hw_gapminder <- read.csv('.Desktop/hw_gapminder.csv')
hw_gapminder <- read.csv('./Desktop/hw_gapminder.csv')
mean_lifeExp <- mean(hw_gapminder$lifeExpe)
mean_lifeExp <- mean(hw_gapminder$lifeExp)
small_set <- hw_gapminder[c(1, 2, 3, 4, 1300:1304), ('country', 'continent', 'year')]
small_set <- hw_gapminder[c(1, 2, 3, 4, 1300:1304), c('country', 'continent', 'year')]
mean_gdp <- mean(hw_gapminder$gdpPercap)
max_country <- hw_gapminder$country[which(hw_gapminder$lifeExp = max(hw_gapminder$lifeExp))]
max_country <- hw_gapminder$country[which(hw_gapminder$lifeExp == max(hw_gapminder$lifeExp))]
mean_lifeExp
small_set
mean_gdp
max_country
mean_gdp <- mean(hw_gapminder$gdpPercap)
mean_gdp
mean_gdp <- mean(hw_gapminder[$gdpPercap])
mean_gdp <- mean(hw_gapminder[[$gdpPercap]])
mean_gdp <- mean(small_set$gdpPercap)
str(hw_gapminder)
mean_gdp <- mean(hw_gapminder$gdpPercap)
mean_gdp
summary(hw_gapminder$gdpPercap)
mean(hw_gapminder$gdpPercap)
mean_gdp <- mean(hw_gapminder$gdpPercap, na.rm=TRUE)
mean_gdp
max_country <- hw_gapminder$country[which(hw_gapminder$lifeExp = max(hw_gapminder$lifeExp))]
max_country <- hw_gapminder$country[which(hw_gapminder$lifeExp == max(hw_gapminder$lifeExp))]
max_country
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density() +
geom_vline(aes(xintercept = mean(lifeExp))) +
facet_wrap( ~ continent, ncol = 3)
q()
q()
library(ggplot2)
library(gapminder)
library(dplyr)
meow[5,7]
meow <- c(1,2,3,4,10,11,12)
meow[5,7]
meow[[5,7]]
meow[c5,7)]
meow[c(5,7)]
meow[c(5, length(meow))]
dbl_vec <- c(1.2,1.3,1.4,2.5)
str(dbl_vec)
typeof(dbl_vec)
typeof(int_vec)
int_vec <- c(1,2,3,4) # this just produces a double vector
typeof(int_vec)
log_vec <- c(TRUE, FALSE, TRUE)
typeof(log_vec)
log_vec
sum(log_vec)
chr_vec <- c('a', 'b', 'c')
chr_vec
typeof(chr_vec)
z <- read.csv(text = 'value\n12\n1\n.\n9')
str(z)
typeof(x[[1]])
typeof(z[[1]])
as.double(z[[1]])
as.character(z[[1]])
as.double(as.character(z[[1]]))
a <- matrix(1:6, ncol=3, nrow=2,)
a
a[,3]
length(a)
dim(a)
nrow(a)
ncol(a)
x <- (c('a', 'b', 'c', 'd', 'e', 'f'))
a <- matrix(x, ncol = 3, nrow =2)
a
x <- c(c, 1,2,3)
x
x <- c(x, 1,2,3)
x
str(gapminder)
ggplot(data = gapminder, aes(x = lifeExp, fill = continent)) +
geom_density() +
geom_vline(aes(xintercept = mean(lifeExp))) +
facet_wrap( ~ continent, ncol = 3)
q()
setwd('/Users/John/R_projects/')
msleep <- read.csf('msleep_ggplot2.csv')
library(dplyr)
msleep <- read.csv('msleep_ggplot2.csv')
head(msleep)
colnames(msleep)
>>>>>>> 597d8b60f985318f1cbbecf22b4929dd33daf08a
q()
library(ggplot2)
library(dplyr)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame()
for (j in 1:length(r_vals)) {
dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops <- data.frame()
for (j in 1:length(r_vals)) {
pops <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
length(r_vals)
class(pops)
pops <- data.frame()
class(pops)
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
return(pops)
}
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
return(pops[])
}
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = 1, ninit = ninit, k = k, ngen = ngen))
ninit <- 2
k <- 1000
ngen <- 4
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = 1, ninit = ninit, k = k, ngen = ngen))
pops
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = _vals, ninit = ninit, k = k, ngen = ngen))
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = _vals, ninit = ninit, k = k, ngen = ngen)
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = r_vals, ninit = ninit, k = k, ngen = ngen))
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = r_vals, ninit = ninit, k = k, ngen = ngen))
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth)
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth)
for (j in 1:length(r_vals)) {
pops[j] <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
r_vals[1]
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p, pop_df)
return(plot_list)
}
plot_list
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
pop_growth[[1]]
browser()
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
browser()
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p, pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
browser()
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p, pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
t
pop_df
pop_df <- data.frame(n, t)
pop_df
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
p
names(pop_df)
pop_df
pop_df <- data.frame(n, t)
print(n)
dim(n)
length(n)
length(t)
pop_df <- data.frame(n, t)
pop_df
names(pop_df)
ggplot(data = pop_df, aes(x = t, y = n)) + geom_line()
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) + geom_line()
p1
plot_list <- list(p, pop_df)
plot_list
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p1, pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1, pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1, pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth[[2]]
pop_growth[[1]]
pop_growth[[2]]
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_growth[[2]], aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1, pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth[[1]]
as.data.frame(pop_growth[[1]])
str(pop_growth[[1]])
q()
vec <- c(1:100)
vec
plot(vec)
if (x < 0) {
y <-1
}
q()
n
