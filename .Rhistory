geom_line()
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
# n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
# n <- rep(NA, ngen)
# n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
# n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
pop_df1 <- data.frame(N = pop1, time = 1:4)
pop2 <- dgrowth(r = 2, ninit = 1, k = 1000, ngen = 4)
pop_df2 <- data.frame(N = pop2, time = 1:4)
pops_df <- rbind(pop_df1, pop_df2)
pops_df
r_vals = seq(0.7, 3, 0.1)
for (1 in 1:length(ngen)) {
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
}
for (i in 1:length(ngen)) {
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
}
for (i in 1:length(ngen = 100)) {
dgrowth(r = r_vals, ninit = 1, k = 1000)
}
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
warnings()
dgrowth <- function(ninit, r_vals, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r_vals*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
r_vals = seq(0.7, 3, 0.1)
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
r_vals
ngen <- 100
r_vals = seq(0.7, (ngen/0.1), 0.1)
dgrowth(r = r_vals, ninit = 1, k = 1000, ngen = 100)
warnings()
r_vals = seq(0.7, 3, 0.1)
for (i in 1:length(r_vals)) {
dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
}
for (i in 1:length(r_vals)) {
newgrowth <- dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
return(newgrowth)
}
length(r_vals)
r_vals = seq(0.7, 3, 0.1)
for (i in 1:length(r_vals)) {
data.frame(newgrowth) <- dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
}
newgrowth <- data.frame
for (i in 1:length(r_vals)) {
newgrowth <- dgrowth(r = i, ninit = 1, k = 1000, ngen = 100)
}
newgrowth
newgrowth[[1]]
newgrowth[[2]]
for (i in 1:length(r_vals)) {
newgrowth <- dgrowth(r_vals[i], ninit = 1, k = 1000, ngen = 100)
}
newgrowth[[2]]
newgrowth
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r_vals[i], ninit = 1, k = 1000, ngen = 100)
}
warnings()
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r_vals[i], ninit = 2, k = 1000, ngen = 10)
}
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 10)
}
class(newgrowth)
newgrowth <- data.frame()
class(newgrowth)
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 10)
}
length(r_vals)
class(r_vals)
r_vals
r_vals[2]
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame()
or (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 4)
}
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
#n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (i in 1:length(r_vals)) {
newgrowth[i] <- dgrowth(r=r_vals[i], ninit = 2, k = 1000, ngen = 4)
}
class(newgrowth)
newgrowth[[2]]
newgrowth[2]
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
for (j in 1:length(r_vals)) {
r=r_vals[j]
newgrowth[j] <- dgrowth(r, ninit = 2, k = 1000, ngen = 4)
}
newgrowth[] <- data.frame()
for (j in 1:length(r_vals)) {
r=r_vals[j]
newgrowth[j] <- dgrowth(r, ninit = 2, k = 1000, ngen = 4)
}
newgrowth <- data.frame()
class(newgrowth)
for (j in 1:length(r_vals)) {
r=r_vals[j]
newgrowth <- dgrowth(r, ninit = 2, k = 1000, ngen = 4)
}
for (j in 1:length(r_vals)) {
newgrowth <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 1:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
# n <- rep(NA, ngen)
# n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
for (j in 1:length(r_vals)) {
newgrowth[j] <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame()
for (j in 1:length(r_vals)) {
dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r =1, ninit = ninit, k = k, ngen = ngen))
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = 1, ninit = ninit, k = k, ngen = ngen))
pop1 <- dgrowth(r = 1, ninit = 1, k = 1000, ngen = 4)
pop_df1 <- data.frame(N = pop1, time = 1:4)
pop2 <- dgrowth(r = 2, ninit = 1, k = 1000, ngen = 4)
pop_df2 <- data.frame(N = pop2, time = 1:4)
pop1
q()
library(ggplot2)
library(dplyr)
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in 2:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
return(n)
}
r_vals = seq(0.7, 3, 0.1)
newgrowth <- data.frame()
for (j in 1:length(r_vals)) {
dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops <- data.frame()
for (j in 1:length(r_vals)) {
pops <- dgrowth(r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
length(r_vals)
class(pops)
pops <- data.frame()
class(pops)
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
return(pops)
}
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
return(pops[])
}
for (j in 1:length(r_vals)) {
pops <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = 1, ninit = ninit, k = k, ngen = ngen))
ninit <- 2
k <- 1000
ngen <- 4
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = 1, ninit = ninit, k = k, ngen = ngen))
pops
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = _vals, ninit = ninit, k = k, ngen = ngen))
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = _vals, ninit = ninit, k = k, ngen = ngen)
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = r_vals, ninit = ninit, k = k, ngen = ngen))
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth(r = r_vals, ninit = ninit, k = k, ngen = ngen))
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth)
pops <- data.frame(r = 0.6, t = 1:ngen, N = dgrowth)
for (j in 1:length(r_vals)) {
pops[j] <- dgrowth(r=r_vals[j], ninit = 2, k = 1000, ngen = 4)
}
pops
r_vals[1]
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
dgrowth <- function(ninit, r, k, ngen) {
graphics.off()
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p, pop_df)
return(plot_list)
}
plot_list
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
pop_growth[[1]]
browser()
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
browser()
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p, pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
browser()
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p, pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
t
pop_df
pop_df <- data.frame(n, t)
pop_df
colnames(pop_df) <- c('N', 'time')
p <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
p
names(pop_df)
pop_df
pop_df <- data.frame(n, t)
print(n)
dim(n)
length(n)
length(t)
pop_df <- data.frame(n, t)
pop_df
names(pop_df)
ggplot(data = pop_df, aes(x = t, y = n)) + geom_line()
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) + geom_line()
p1
plot_list <- list(p, pop_df)
plot_list
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(p1, pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1, pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_df, aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1, pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth[[2]]
pop_growth[[1]]
pop_growth[[2]]
dgrowth <- function(ninit, r, k, ngen) {
n <- rep(NA, ngen)
n[1] <- ninit
for (i in ninit:ngen) {
n[i] <- n[i-1] + r*n[i-1] * (1-(n[i-1]/k))
}
t <- 1:ngen
pop_df <- data.frame(n, t)
colnames(pop_df) <- c('N', 'time')
p1 <- ggplot(data = pop_growth[[2]], aes(x = t, y = n)) +
geom_line()
plot_list <- list(plot = p1, pop_df = pop_df)
return(plot_list)
}
pop_growth <-  dgrowth(2, 1, 1000, 100)
pop_growth[[1]]
as.data.frame(pop_growth[[1]])
str(pop_growth[[1]])
q()
